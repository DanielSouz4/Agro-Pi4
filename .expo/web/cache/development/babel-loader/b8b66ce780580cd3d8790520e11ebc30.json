{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { db, auth, storage } from \"../../components/config\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      picture = _useState4[0],\n      setPicture = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      link = _useState8[0],\n      setLink = _useState8[1];\n\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      console.log(result);\n\n      if (!result.canceled) {\n        setImage(result.uri);\n      }\n    });\n\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var uploadImage = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var blobImage = yield new Promise(function (resolve, reject) {\n          var xhr = new XMLHttpRequest();\n\n          xhr.onload = function () {\n            resolve(xhr.response);\n          };\n\n          xhr.onerror = function () {\n            reject(new TypeError(\"Network request failed\"));\n          };\n\n          xhr.responseType = 'blob';\n          xhr.open(\"GET\", image, true);\n          xhr.send(null);\n        });\n        var metadata = {\n          contentType: 'image/jpeg'\n        };\n        var storageRef = ref(storage, 'img/' + Date.now());\n        var uploadTask = uploadBytesResumable(storageRef, blobImage);\n        uploadTask.on('state_changed', function (snapshot) {\n          var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n          console.log('Upload is ' + progress + '% done');\n\n          switch (snapshot.state) {\n            case 'paused':\n              console.log('Upload is paused');\n              break;\n\n            case 'running':\n              console.log('Upload is running');\n              break;\n          }\n        }, function (error) {}, function () {\n          getDownloadURL(uploadTask.snapshot.ref).then(function (downloadURL) {\n            console.log('File available at', downloadURL);\n            setLink(downloadURL);\n          });\n        });\n      });\n\n      return function uploadImage() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (image != null) {\n      uploadImage();\n      setImage(null);\n    }\n  }, [image]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 22,\n        color: 'black'\n      },\n      children: \"Ol\\xE1, seja bem vindo!\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Titulo do arquivo selecionado\"\n    }), _jsx(TouchableOpacity, {\n      style: {\n        height: 50,\n        width: \"80%\",\n        margin: 20,\n        backgroundColor: \"green\",\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      onPress: pickImage,\n      children: _jsx(Text, {\n        children: \"Escolha uma foto \"\n      })\n    }), _jsx(Text, {\n      children: link\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  texto: {\n    color: \"black\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: 'black',\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","db","auth","storage","ImagePicker","ref","uploadBytesResumable","getDownloadURL","App","title","setTitle","picture","setPicture","image","setImage","link","setLink","pickImage","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","console","log","canceled","uri","uploadImage","blobImage","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","metadata","contentType","storageRef","Date","now","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","error","then","downloadURL","styles","container","fontSize","color","input","height","width","margin","backgroundColor","justifyContent","alignItems","StyleSheet","create","flex","texto","borderBottomWidth","borderBottomColor","padding"],"sources":["C:/Users/Positivo/OneDrive/Área de Trabalho/Projeto integrador 4/Agro-Pi4/src/screens/Imagens/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { View,Text,TouchableOpacity,Button,StyleSheet,Image, TextInput } from \"react-native\";\r\nimport{db,auth,storage} from '../../components/config';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\n\r\n\r\nexport default function App() {\r\n    const [title,setTitle] = useState(null);\r\n    const [picture,setPicture] = useState(null);\r\n    const [image,setImage] = useState(null);\r\n    const [link,setLink] = useState(null);\r\n\r\n    const pickImage = async () => {\r\n        // No permissions request is necessary for launching the image library\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n          allowsEditing: true,\r\n          aspect: [4, 3],\r\n          quality: 1,\r\n        });\r\n    \r\n        console.log(result);\r\n    \r\n        if (!result.canceled) {\r\n          setImage(result.uri);\r\n        }\r\n      };\r\n      useEffect(()=>{\r\n        const uploadImage = async()=>{\r\n            //trtanfroma o arquivo de imagem em blop image\r\n            const blobImage = await new Promise ((resolve,reject)=>{\r\n                const xhr = new XMLHttpRequest();\r\n                xhr.onload=function(){\r\n                    resolve(xhr.response);\r\n                }\r\n                xhr.onerror=function(){\r\n                    reject(new TypeError(\"Network request failed\"))\r\n                };\r\n                xhr.responseType = 'blob';\r\n                xhr.open(\"GET\",image,true);\r\n                xhr.send(null);\r\n            })\r\n            //configura a metadata do arquivo\r\n            /** @type {any} */\r\n            const metadata = {\r\n                contentType: 'image/jpeg',\r\n            };\r\n            //envia o arquivo pro storage\r\n            const storageRef = ref(storage, 'img/'+Date.now());\r\n\r\n            const uploadTask = uploadBytesResumable(storageRef, blobImage);\r\n\r\n            // Register three observers:\r\n            // 1. 'state_changed' observer, called any time the state changes\r\n            // 2. Error observer, called on failure\r\n            // 3. Completion observer, called on successful completion\r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n                    // Observe state change events such as progress, pause, and resume\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    switch (snapshot.state) {\r\n                        case 'paused':\r\n                            console.log('Upload is paused');\r\n                            break;\r\n                        case 'running':\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },\r\n                (error) => {\r\n                    // Handle unsuccessful uploads\r\n                },\r\n                () => {\r\n                    // Handle successful uploads on complete\r\n                    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n                    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                        console.log('File available at', downloadURL);\r\n                        setLink(downloadURL);\r\n                    });\r\n                }\r\n            );\r\n        }\r\n        if(image!=null){\r\n            uploadImage();\r\n            setImage(null);\r\n        }\r\n\r\n      },[image])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text  style={{fontSize:22,color:'black'}}>Olá, seja bem vindo!</Text>\r\n            <TextInput style={styles.input} placeholder=\"Titulo do arquivo selecionado\"/>\r\n            <TouchableOpacity style={{height:50,width:\"80%\",margin:20,backgroundColor:\"green\",justifyContent:'center',alignItems:'center'}}onPress={pickImage}><Text>Escolha uma foto </Text></TouchableOpacity>\r\n            <Text>{link}</Text>\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n\r\n    },\r\n    texto:{\r\n        color:\"black\",\r\n\r\n\r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderBottomWidth:1,\r\n        borderBottomColor:'black',\r\n        padding: 10,\r\n      },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}