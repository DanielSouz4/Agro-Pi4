{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"onPress\", \"to\", \"accessibilityRole\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TabBarIcon from \"./TabBarIcon\";\nexport default function BottomTabBarItem(_ref) {\n  var focused = _ref.focused,\n      route = _ref.route,\n      descriptor = _ref.descriptor,\n      label = _ref.label,\n      icon = _ref.icon,\n      badge = _ref.badge,\n      badgeStyle = _ref.badgeStyle,\n      to = _ref.to,\n      _ref$button = _ref.button,\n      button = _ref$button === void 0 ? function (_ref2) {\n    var children = _ref2.children,\n        style = _ref2.style,\n        _onPress = _ref2.onPress,\n        to = _ref2.to,\n        accessibilityRole = _ref2.accessibilityRole,\n        rest = _objectWithoutProperties(_ref2, _excluded);\n\n    if (Platform.OS === 'web' && to) {\n      return React.createElement(Link, _extends({}, rest, {\n        to: to,\n        style: [styles.button, style],\n        onPress: function onPress(e) {\n          if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n            e.preventDefault();\n            _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n          }\n        }\n      }), children);\n    } else {\n      return React.createElement(Pressable, _extends({}, rest, {\n        accessibilityRole: accessibilityRole,\n        onPress: _onPress,\n        style: style\n      }), children);\n    }\n  } : _ref$button,\n      accessibilityLabel = _ref.accessibilityLabel,\n      testID = _ref.testID,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      horizontal = _ref.horizontal,\n      customActiveTintColor = _ref.activeTintColor,\n      customInactiveTintColor = _ref.inactiveTintColor,\n      _ref$activeBackground = _ref.activeBackgroundColor,\n      activeBackgroundColor = _ref$activeBackground === void 0 ? 'transparent' : _ref$activeBackground,\n      _ref$inactiveBackgrou = _ref.inactiveBackgroundColor,\n      inactiveBackgroundColor = _ref$inactiveBackgrou === void 0 ? 'transparent' : _ref$inactiveBackgrou,\n      _ref$showLabel = _ref.showLabel,\n      showLabel = _ref$showLabel === void 0 ? true : _ref$showLabel,\n      allowFontScaling = _ref.allowFontScaling,\n      labelStyle = _ref.labelStyle,\n      iconStyle = _ref.iconStyle,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  var inactiveTintColor = customInactiveTintColor === undefined ? Color(colors.text).mix(Color(colors.card), 0.5).hex() : customInactiveTintColor;\n\n  var renderLabel = function renderLabel(_ref3) {\n    var focused = _ref3.focused;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    var color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color: color\n        }, horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n\n    var options = descriptor.options;\n    var children = typeof options.tabBarLabel === 'string' ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    return label({\n      focused: focused,\n      color: color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n      children: children\n    });\n  };\n\n  var renderIcon = function renderIcon(_ref4) {\n    var focused = _ref4.focused;\n\n    if (icon === undefined) {\n      return null;\n    }\n\n    var activeOpacity = focused ? 1 : 0;\n    var inactiveOpacity = focused ? 0 : 1;\n    return React.createElement(TabBarIcon, {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n\n  var scene = {\n    route: route,\n    focused: focused\n  };\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to: to,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: Platform.select({\n      ios: 'button',\n      default: 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor: backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: React.createElement(React.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nvar styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"sources":["views/BottomTabItem.tsx"],"names":["Link","useTheme","Color","React","TabBarIcon","BottomTabBarItem","focused","route","descriptor","label","icon","badge","badgeStyle","to","button","children","style","onPress","accessibilityRole","rest","Platform","OS","styles","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","accessibilityLabel","testID","onLongPress","horizontal","activeTintColor","customActiveTintColor","inactiveTintColor","customInactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","allowFontScaling","labelStyle","iconStyle","colors","undefined","primary","text","mix","card","hex","renderLabel","color","labelBeside","labelBeneath","options","tabBarLabel","title","name","position","renderIcon","activeOpacity","inactiveOpacity","scene","backgroundColor","select","ios","default","accessibilityState","selected","accessibilityStates","tab","tabLandscape","tabPortrait","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","textAlign","fontSize","marginLeft","marginTop","display"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAsBC,QAAtB,QAAsC,0BAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAiBA,OAAOC,UAAP;AA+GA,eAAe,SAASC,gBAAT,CAAyB,IAAzB,EAiEL;EAjE+B,IACvCC,OADuC,GAiEjC,IAjEiC,CACvCA,OADuC;EAAA,IAEvCC,KAFuC,GAiEjC,IAjEiC,CAEvCA,KAFuC;EAAA,IAGvCC,UAHuC,GAiEjC,IAjEiC,CAGvCA,UAHuC;EAAA,IAIvCC,KAJuC,GAiEjC,IAjEiC,CAIvCA,KAJuC;EAAA,IAKvCC,IALuC,GAiEjC,IAjEiC,CAKvCA,IALuC;EAAA,IAMvCC,KANuC,GAiEjC,IAjEiC,CAMvCA,KANuC;EAAA,IAOvCC,UAPuC,GAiEjC,IAjEiC,CAOvCA,UAPuC;EAAA,IAQvCC,EARuC,GAiEjC,IAjEiC,CAQvCA,EARuC;EAAA,kBAiEjC,IAjEiC,CASvCC,MATuC;EAAA,IASvCA,MATuC,4BAS9B,UAAA,KAAA,EAOsB;IAPrB,IACRC,QADQ,GAOgB,KAPhB,CACRA,QADQ;IAAA,IAERC,KAFQ,GAOgB,KAPhB,CAERA,KAFQ;IAAA,IAGRC,QAHQ,GAOgB,KAPhB,CAGRA,OAHQ;IAAA,IAIRJ,EAJQ,GAOgB,KAPhB,CAIRA,EAJQ;IAAA,IAKRK,iBALQ,GAOgB,KAPhB,CAKRA,iBALQ;IAAA,IAMLC,IANK,4BAOgB,KAPhB;;IAQR,IAAIC,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,IAAyBP,EAA7B,EAAiC;MAG/B,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,QAAA,CAAA,EAAA,EACCM,IADD,EACK;QACR,EAAE,EAAEN,EADI;QAER,KAAK,EAAE,CAACS,MAAM,CAACR,MAAR,EAAgBE,KAAhB,CAFC;QAGR,OAAO,EAAGO,iBAAAA,CAAM,EAAK;UACnB,IACE,EAAEA,CAAC,CAACC,OAAFD,IAAaA,CAAC,CAACE,MAAfF,IAAyBA,CAAC,CAACG,OAA3BH,IAAsCA,CAAC,CAACI,QAA1C,MACCJ,CAAC,CAACT,MAAFS,IAAY,IAAZA,IAAoBA,CAAC,CAACT,MAAFS,KAAa,CADlC,CADF,EAGE;YACAA,CAAC,CAACK,cAAFL;YACAN,QAAO,KAAA,IAAPA,IAAAA,QAAO,KAAA,KAAA,CAAPA,GAAO,KAAA,CAAPA,GAAAA,QAAO,CAAGM,CAAH,CAAPN;UACF;QACF;MAXQ,CADL,CAAL,EAcGF,QAdH,CADF;IAkBD,CArBD,MAqBO;MACL,OACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,QAAA,CAAA,EAAA,EACJI,IADI,EACA;QACR,iBAAiB,EAAED,iBADX;QAER,OAAO,EAAED,QAFD;QAGR,KAAK,EAAED;MAHC,CADA,CAAV,EAMGD,QANH,CADF;IAUF;EACD,CAlDsC;EAAA,IAmDvCc,kBAnDuC,GAiEjC,IAjEiC,CAmDvCA,kBAnDuC;EAAA,IAoDvCC,MApDuC,GAiEjC,IAjEiC,CAoDvCA,MApDuC;EAAA,IAqDvCb,OArDuC,GAiEjC,IAjEiC,CAqDvCA,OArDuC;EAAA,IAsDvCc,WAtDuC,GAiEjC,IAjEiC,CAsDvCA,WAtDuC;EAAA,IAuDvCC,UAvDuC,GAiEjC,IAjEiC,CAuDvCA,UAvDuC;EAAA,IAwDtBE,qBAxDsB,GAiEjC,IAjEiC,CAwDvCD,eAxDuC;EAAA,IAyDpBG,uBAzDoB,GAiEjC,IAjEiC,CAyDvCD,iBAzDuC;EAAA,4BAiEjC,IAjEiC,CA0DvCE,qBA1DuC;EAAA,IA0DvCA,qBA1DuC,sCA0Df,aA1De;EAAA,4BAiEjC,IAjEiC,CA2DvCC,uBA3DuC;EAAA,IA2DvCA,uBA3DuC,sCA2Db,aA3Da;EAAA,qBAiEjC,IAjEiC,CA4DvCC,SA5DuC;EAAA,IA4DvCA,SA5DuC,+BA4D3B,IA5D2B;EAAA,IA6DvCC,gBA7DuC,GAiEjC,IAjEiC,CA6DvCA,gBA7DuC;EAAA,IA8DvCC,UA9DuC,GAiEjC,IAjEiC,CA8DvCA,UA9DuC;EAAA,IA+DvCC,SA/DuC,GAiEjC,IAjEiC,CA+DvCA,SA/DuC;EAAA,IAgEvC1B,KAhEuC,GAiEjC,IAjEiC,CAgEvCA,KAhEuC;;EAkEvC,gBAAmBf,QAAQ,EAA3B;EAAA,IAAQ0C,MAAR,aAAQA,MAAR;;EAEA,IAAMV,eAAe,GACnBC,qBAAqB,KAAKU,SAA1BV,GACIS,MAAM,CAACE,OADXX,GAEIA,qBAHN;EAKA,IAAMC,iBAAiB,GACrBC,uBAAuB,KAAKQ,SAA5BR,GACIlC,KAAK,CAACyC,MAAM,CAACG,IAAR,CAAL5C,CAAmB6C,GAAnB7C,CAAuBA,KAAK,CAACyC,MAAM,CAACK,IAAR,CAA5B9C,EAA2C,GAA3CA,EAAgD+C,GAAhD/C,EADJkC,GAEIA,uBAHN;;EAKA,IAAMc,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAuC;IAAtC,IAAE5C,OAAF,GAAiC,KAAjC,CAAEA,OAAF;;IACnB,IAAIiC,SAAS,KAAK,KAAlB,EAAyB;MACvB,OAAO,IAAP;IACF;;IAEA,IAAMY,KAAK,GAAG7C,OAAO,GAAG2B,eAAH,GAAqBE,iBAA1C;;IAEA,IAAI,OAAO1B,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;QACH,aAAa,EAAE,CADZ;QAEH,KAAK,EAAE,CACLa,MAAM,CAACb,KADF,EAEL;UAAE0C,KAAAA,EAAAA;QAAF,CAFK,EAGLnB,UAAU,GAAGV,MAAM,CAAC8B,WAAV,GAAwB9B,MAAM,CAAC+B,YAHpC,EAILZ,UAJK,CAFJ;QAQH,gBAAgB,EAAED;MARf,CAAL,EAUG/B,KAVH,CADF;IAcF;;IAEA,IAAQ6C,OAAR,GAAoB9C,UAApB,CAAQ8C,OAAR;IACA,IAAMvC,QAAQ,GACZ,OAAOuC,OAAO,CAACC,WAAf,KAA+B,QAA/B,GACID,OAAO,CAACC,WADZ,GAEID,OAAO,CAACE,KAARF,KAAkBV,SAAlBU,GACAA,OAAO,CAACE,KADRF,GAEA/C,KAAK,CAACkD,IALZ;IAOA,OAAOhD,KAAK,CAAC;MACXH,OAAO,EAAPA,OADW;MAEX6C,KAAK,EAALA,KAFW;MAGXO,QAAQ,EAAE1B,UAAU,GAAG,aAAH,GAAmB,YAH5B;MAIXjB,QAAAA,EAAAA;IAJW,CAAD,CAAZ;EAMD,CAtCD;;EAwCA,IAAM4C,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAAuC;IAAtC,IAAErD,OAAF,GAAiC,KAAjC,CAAEA,OAAF;;IAClB,IAAII,IAAI,KAAKkC,SAAb,EAAwB;MACtB,OAAO,IAAP;IACF;;IAEA,IAAMgB,aAAa,GAAGtD,OAAO,GAAG,CAAH,GAAO,CAApC;IACA,IAAMuD,eAAe,GAAGvD,OAAO,GAAG,CAAH,GAAO,CAAtC;IAEA,OACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;MACT,KAAK,EAAEC,KADE;MAET,UAAU,EAAEyB,UAFH;MAGT,KAAK,EAAErB,KAHE;MAIT,UAAU,EAAEC,UAJH;MAKT,aAAa,EAAEgD,aALN;MAMT,eAAe,EAAEC,eANR;MAOT,eAAe,EAAE5B,eAPR;MAQT,iBAAiB,EAAEE,iBARV;MAST,UAAU,EAAEzB,IATH;MAUT,KAAK,EAAEgC;IAVE,CAAX,CADF;EAcD,CAtBD;;EAwBA,IAAMoB,KAAK,GAAG;IAAEvD,KAAK,EAALA,KAAF;IAASD,OAAAA,EAAAA;EAAT,CAAd;EAEA,IAAMyD,eAAe,GAAGzD,OAAO,GAC3B+B,qBAD2B,GAE3BC,uBAFJ;EAIA,OAAOxB,MAAM,CAAC;IACZD,EAAE,EAAFA,EADY;IAEZI,OAAO,EAAPA,OAFY;IAGZc,WAAW,EAAXA,WAHY;IAIZD,MAAM,EAANA,MAJY;IAKZD,kBAAkB,EAAlBA,kBALY;IAOZX,iBAAiB,EAAEE,QAAQ,CAAC4C,MAAT5C,CAAgB;MAAE6C,GAAG,EAAE,QAAP;MAAiBC,OAAO,EAAE;IAA1B,CAAhB9C,CAPP;IAQZ+C,kBAAkB,EAAE;MAAEC,QAAQ,EAAE9D;IAAZ,CARR;IAUZ+D,mBAAmB,EAAE/D,OAAO,GAAG,CAAC,UAAD,CAAH,GAAkB,EAVlC;IAWZU,KAAK,EAAE,CACLM,MAAM,CAACgD,GADF,EAEL;MAAEP,eAAAA,EAAAA;IAAF,CAFK,EAGL/B,UAAU,GAAGV,MAAM,CAACiD,YAAV,GAAyBjD,MAAM,CAACkD,WAHrC,EAILxD,KAJK,CAXK;IAiBZD,QAAQ,EACN,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACG4C,UAAU,CAACG,KAAD,CADb,EAEGZ,WAAW,CAACY,KAAD,CAFd;EAlBU,CAAD,CAAb;AAwBF;AAEA,IAAMxC,MAAM,GAAGmD,UAAU,CAACC,MAAXD,CAAkB;EAC/BH,GAAG,EAAE;IACHK,IAAI,EAAE,CADH;IAEHC,UAAU,EAAE;EAFT,CAD0B;EAK/BJ,WAAW,EAAE;IACXK,cAAc,EAAE,UADL;IAEXC,aAAa,EAAE;EAFJ,CALkB;EAS/BP,YAAY,EAAE;IACZM,cAAc,EAAE,QADJ;IAEZC,aAAa,EAAE;EAFH,CATiB;EAa/BrE,KAAK,EAAE;IACLsE,SAAS,EAAE,QADN;IAELhB,eAAe,EAAE;EAFZ,CAbwB;EAiB/BV,YAAY,EAAE;IACZ2B,QAAQ,EAAE;EADE,CAjBiB;EAoB/B5B,WAAW,EAAE;IACX4B,QAAQ,EAAE,EADC;IAEXC,UAAU,EAAE,EAFD;IAGXC,SAAS,EAAE;EAHA,CApBkB;EAyB/BpE,MAAM,EAAE;IACNqE,OAAO,EAAE;EADH;AAzBuB,CAAlBV,CAAf","sourceRoot":"../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport { Platform, Pressable, StyleSheet, Text } from 'react-native';\nimport TabBarIcon from './TabBarIcon';\nexport default function BottomTabBarItem(_ref) {\n  let {\n    focused,\n    route,\n    descriptor,\n    label,\n    icon,\n    badge,\n    badgeStyle,\n    to,\n    button = _ref2 => {\n      let {\n        children,\n        style,\n        onPress,\n        to,\n        accessibilityRole,\n        ...rest\n      } = _ref2;\n      if (Platform.OS === 'web' && to) {\n        // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n        // We need to use `onClick` to be able to prevent default browser handling of links.\n        return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n          to: to,\n          style: [styles.button, style],\n          onPress: e => {\n            if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (\n            // ignore clicks with modifier keys\n            e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress === null || onPress === void 0 ? void 0 : onPress(e);\n            }\n          }\n        }), children);\n      } else {\n        return /*#__PURE__*/React.createElement(Pressable, _extends({}, rest, {\n          accessibilityRole: accessibilityRole,\n          onPress: onPress,\n          style: style\n        }), children);\n      }\n    },\n    accessibilityLabel,\n    testID,\n    onPress,\n    onLongPress,\n    horizontal,\n    activeTintColor: customActiveTintColor,\n    inactiveTintColor: customInactiveTintColor,\n    activeBackgroundColor = 'transparent',\n    inactiveBackgroundColor = 'transparent',\n    showLabel = true,\n    allowFontScaling,\n    labelStyle,\n    iconStyle,\n    style\n  } = _ref;\n  const {\n    colors\n  } = useTheme();\n  const activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  const inactiveTintColor = customInactiveTintColor === undefined ? Color(colors.text).mix(Color(colors.card), 0.5).hex() : customInactiveTintColor;\n  const renderLabel = _ref3 => {\n    let {\n      focused\n    } = _ref3;\n    if (showLabel === false) {\n      return null;\n    }\n    const color = focused ? activeTintColor : inactiveTintColor;\n    if (typeof label === 'string') {\n      return /*#__PURE__*/React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color\n        }, horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n    const {\n      options\n    } = descriptor;\n    const children = typeof options.tabBarLabel === 'string' ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n      children\n    });\n  };\n  const renderIcon = _ref4 => {\n    let {\n      focused\n    } = _ref4;\n    if (icon === undefined) {\n      return null;\n    }\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n    return /*#__PURE__*/React.createElement(TabBarIcon, {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n  const scene = {\n    route,\n    focused\n  };\n  const backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    // FIXME: accessibilityRole: 'tab' doesn't seem to work as expected on iOS\n    accessibilityRole: Platform.select({\n      ios: 'button',\n      default: 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3\n  },\n  button: {\n    display: 'flex'\n  }\n});\n//# sourceMappingURL=BottomTabItem.js.map"]},"metadata":{},"sourceType":"module"}