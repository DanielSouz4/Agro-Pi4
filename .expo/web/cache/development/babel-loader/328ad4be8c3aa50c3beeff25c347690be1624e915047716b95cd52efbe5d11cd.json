{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport PropTypes from 'prop-types';\nimport styles from \"./Pagination.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PaginationDot = function (_PureComponent) {\n  _inherits(PaginationDot, _PureComponent);\n  var _super = _createSuper(PaginationDot);\n  function PaginationDot(props) {\n    var _this;\n    _classCallCheck(this, PaginationDot);\n    _this = _super.call(this, props);\n    _this.state = {\n      animColor: new Animated.Value(0),\n      animOpacity: new Animated.Value(0),\n      animTransform: new Animated.Value(0)\n    };\n    return _this;\n  }\n  _createClass(PaginationDot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this._animate(1);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.active !== this.props.active) {\n        this._animate(this.props.active ? 1 : 0);\n      }\n    }\n  }, {\n    key: \"_animate\",\n    value: function _animate() {\n      var toValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var _this$state = this.state,\n        animColor = _this$state.animColor,\n        animOpacity = _this$state.animOpacity,\n        animTransform = _this$state.animTransform;\n      var _this$props = this.props,\n        animatedDuration = _this$props.animatedDuration,\n        animatedFriction = _this$props.animatedFriction,\n        animatedTension = _this$props.animatedTension;\n      var commonProperties = {\n        toValue: toValue,\n        duration: animatedDuration,\n        isInteraction: false,\n        useNativeDriver: !this._shouldAnimateColor\n      };\n      var animations = [Animated.timing(animOpacity, _objectSpread({\n        easing: Easing.linear\n      }, commonProperties)), Animated.spring(animTransform, _objectSpread({\n        friction: animatedFriction,\n        tension: animatedTension\n      }, commonProperties))];\n      if (this._shouldAnimateColor) {\n        animations.push(Animated.timing(animColor, _objectSpread({\n          easing: Easing.linear\n        }, commonProperties)));\n      }\n      Animated.parallel(animations).start();\n    }\n  }, {\n    key: \"_shouldAnimateColor\",\n    get: function get() {\n      var _this$props2 = this.props,\n        color = _this$props2.color,\n        inactiveColor = _this$props2.inactiveColor;\n      return color && inactiveColor;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n        animColor = _this$state2.animColor,\n        animOpacity = _this$state2.animOpacity,\n        animTransform = _this$state2.animTransform;\n      var _this$props3 = this.props,\n        active = _this$props3.active,\n        activeOpacity = _this$props3.activeOpacity,\n        carouselRef = _this$props3.carouselRef,\n        color = _this$props3.color,\n        containerStyle = _this$props3.containerStyle,\n        inactiveColor = _this$props3.inactiveColor,\n        inactiveStyle = _this$props3.inactiveStyle,\n        inactiveOpacity = _this$props3.inactiveOpacity,\n        inactiveScale = _this$props3.inactiveScale,\n        index = _this$props3.index,\n        style = _this$props3.style,\n        tappable = _this$props3.tappable,\n        delayPressInDot = _this$props3.delayPressInDot;\n      var animatedStyle = {\n        opacity: animOpacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveOpacity, 1]\n        }),\n        transform: [{\n          scale: animTransform.interpolate({\n            inputRange: [0, 1],\n            outputRange: [inactiveScale, 1]\n          })\n        }]\n      };\n      var animatedColor = this._shouldAnimateColor ? {\n        backgroundColor: animColor.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveColor, color]\n        })\n      } : {};\n      var dotContainerStyle = [styles.sliderPaginationDotContainer, containerStyle || {}];\n      var dotStyle = [styles.sliderPaginationDot, style || {}, !active && inactiveStyle || {}, animatedStyle, animatedColor];\n      var onPress = tappable ? function () {\n        try {\n          var currentRef = carouselRef.current || carouselRef;\n          currentRef._snapToItem(currentRef._getPositionIndex(index));\n        } catch (error) {\n          console.warn('react-native-snap-carousel | Pagination: ' + '`carouselRef` has to be a Carousel ref.\\n' + error);\n        }\n      } : undefined;\n      return _jsx(TouchableOpacity, {\n        accessible: false,\n        style: dotContainerStyle,\n        activeOpacity: tappable ? activeOpacity : 1,\n        onPress: onPress,\n        delayPressIn: delayPressInDot,\n        children: _jsx(Animated.View, {\n          style: dotStyle\n        })\n      });\n    }\n  }]);\n  return PaginationDot;\n}(PureComponent);\nPaginationDot.propTypes = {\n  inactiveOpacity: PropTypes.number.isRequired,\n  inactiveScale: PropTypes.number.isRequired,\n  active: PropTypes.bool,\n  activeOpacity: PropTypes.number,\n  carouselRef: PropTypes.object,\n  color: PropTypes.string,\n  containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  inactiveColor: PropTypes.string,\n  inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  index: PropTypes.number,\n  style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  tappable: PropTypes.bool\n};\nexport { PaginationDot as default };","map":{"version":3,"names":["React","PureComponent","ViewPropTypes","PropTypes","styles","PaginationDot","props","state","animColor","Animated","Value","animOpacity","animTransform","active","_animate","prevProps","toValue","animatedDuration","animatedFriction","animatedTension","commonProperties","duration","isInteraction","useNativeDriver","_shouldAnimateColor","animations","timing","easing","Easing","linear","spring","friction","tension","push","parallel","start","color","inactiveColor","activeOpacity","carouselRef","containerStyle","inactiveStyle","inactiveOpacity","inactiveScale","index","style","tappable","delayPressInDot","animatedStyle","opacity","interpolate","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","sliderPaginationDotContainer","dotStyle","sliderPaginationDot","onPress","currentRef","current","_snapToItem","_getPositionIndex","error","console","warn","undefined","propTypes","number","isRequired","bool","object","string","View"],"sources":["C:/Users/dansf/Desktop/reactNative/PJ/node_modules/react-native-snap-carousel/src/pagination/PaginationDot.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { View, Animated, Easing, TouchableOpacity, ViewPropTypes } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './Pagination.style';\n\nexport default class PaginationDot extends PureComponent {\n\n    static propTypes = {\n        inactiveOpacity: PropTypes.number.isRequired,\n        inactiveScale: PropTypes.number.isRequired,\n        active: PropTypes.bool,\n        activeOpacity: PropTypes.number,\n        carouselRef: PropTypes.object,\n        color: PropTypes.string,\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        inactiveColor: PropTypes.string,\n        inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        index: PropTypes.number,\n        style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        tappable: PropTypes.bool\n    };\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            animColor: new Animated.Value(0),\n            animOpacity: new Animated.Value(0),\n            animTransform: new Animated.Value(0)\n        };\n    }\n\n    componentDidMount () {\n        if (this.props.active) {\n            this._animate(1);\n        }\n    }\n\n    componentDidUpdate (prevProps) {\n        if (prevProps.active !== this.props.active) {\n            this._animate(this.props.active ? 1 : 0);\n        }\n    }\n\n    _animate (toValue = 0) {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const { animatedDuration, animatedFriction, animatedTension } = this.props\n\n        const commonProperties = {\n            toValue,\n            duration: animatedDuration,\n            isInteraction: false,\n            useNativeDriver: !this._shouldAnimateColor\n        };\n\n        let animations = [\n            Animated.timing(animOpacity, {\n                easing: Easing.linear,\n                ...commonProperties\n            }),\n            Animated.spring(animTransform, {\n                friction: animatedFriction,\n                tension: animatedTension,\n                ...commonProperties\n            })\n        ];\n\n        if (this._shouldAnimateColor) {\n            animations.push(Animated.timing(animColor, {\n                easing: Easing.linear,\n                ...commonProperties\n            }));\n        }\n\n        Animated.parallel(animations).start();\n    }\n\n    get _shouldAnimateColor () {\n        const { color, inactiveColor } = this.props;\n        return color && inactiveColor;\n    }\n\n    render () {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const {\n            active,\n            activeOpacity,\n            carouselRef,\n            color,\n            containerStyle,\n            inactiveColor,\n            inactiveStyle,\n            inactiveOpacity,\n            inactiveScale,\n            index,\n            style,\n            tappable,\n            delayPressInDot\n        } = this.props;\n\n        const animatedStyle = {\n            opacity: animOpacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveOpacity, 1]\n            }),\n            transform: [{\n                scale: animTransform.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [inactiveScale, 1]\n                })\n            }]\n        };\n        const animatedColor = this._shouldAnimateColor ? {\n            backgroundColor: animColor.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveColor, color]\n            })\n        } : {};\n\n        const dotContainerStyle = [\n            styles.sliderPaginationDotContainer,\n            containerStyle || {}\n        ];\n\n        const dotStyle = [\n            styles.sliderPaginationDot,\n            style || {},\n            (!active && inactiveStyle) || {},\n            animatedStyle,\n            animatedColor\n        ];\n\n        const onPress = tappable ? () => {\n            try {\n                const currentRef = carouselRef.current || carouselRef;\n                currentRef._snapToItem(currentRef._getPositionIndex(index));\n            } catch (error) {\n                console.warn(\n                    'react-native-snap-carousel | Pagination: ' +\n                    '`carouselRef` has to be a Carousel ref.\\n' + error\n                );\n            }\n        } : undefined;\n\n        return (\n            <TouchableOpacity\n              accessible={false}\n              style={dotContainerStyle}\n              activeOpacity={tappable ? activeOpacity : 1}\n              onPress={onPress}\n              delayPressIn={delayPressInDot}\n            >\n                <Animated.View style={dotStyle} />\n            </TouchableOpacity>\n        );\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}