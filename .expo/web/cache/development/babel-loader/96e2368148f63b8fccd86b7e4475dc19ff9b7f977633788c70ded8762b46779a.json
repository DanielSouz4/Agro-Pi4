{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { APP_NATIVE_MODULE } from \"../constants\";\nimport NativeFirebaseError from \"../NativeFirebaseError\";\nimport RNFBNativeEventEmitter from \"../RNFBNativeEventEmitter\";\nimport SharedEventEmitter from \"../SharedEventEmitter\";\nvar NATIVE_MODULE_REGISTRY = {};\nvar NATIVE_MODULE_EVENT_SUBSCRIPTIONS = {};\nfunction nativeModuleKey(module) {\n  return (module._customUrlOrRegion || '') + \":\" + module.app.name + \":\" + module._config.namespace;\n}\nfunction nativeModuleMethodWrapped(namespace, method, argToPrepend) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var possiblePromise = method.apply(void 0, [].concat(_toConsumableArray(argToPrepend), args));\n    if (possiblePromise && possiblePromise.then) {\n      var jsStack = new Error().stack;\n      return possiblePromise.catch(function (nativeError) {\n        return Promise.reject(new NativeFirebaseError(nativeError, jsStack, namespace));\n      });\n    }\n    return possiblePromise;\n  };\n}\nfunction nativeModuleWrapped(namespace, NativeModule, argToPrepend) {\n  var native = {};\n  if (!NativeModule) {\n    return NativeModule;\n  }\n  var properties = Object.keys(NativeModule);\n  for (var i = 0, len = properties.length; i < len; i++) {\n    var property = properties[i];\n    if (typeof NativeModule[property] === 'function') {\n      native[property] = nativeModuleMethodWrapped(namespace, NativeModule[property], argToPrepend);\n    } else {\n      native[property] = NativeModule[property];\n    }\n  }\n  return native;\n}\nfunction initialiseNativeModule(module) {\n  var config = module._config;\n  var key = nativeModuleKey(module);\n  var namespace = config.namespace,\n    nativeEvents = config.nativeEvents,\n    nativeModuleName = config.nativeModuleName,\n    hasMultiAppSupport = config.hasMultiAppSupport,\n    hasCustomUrlOrRegionSupport = config.hasCustomUrlOrRegionSupport,\n    disablePrependCustomUrlOrRegion = config.disablePrependCustomUrlOrRegion;\n  var multiModuleRoot = {};\n  var multiModule = Array.isArray(nativeModuleName);\n  var nativeModuleNames = multiModule ? nativeModuleName : [nativeModuleName];\n  for (var i = 0; i < nativeModuleNames.length; i++) {\n    var nativeModule = NativeModules[nativeModuleNames[i]];\n    if (!multiModule && !nativeModule) {\n      throw new Error(getMissingModuleHelpText(namespace));\n    }\n    if (multiModule) {\n      multiModuleRoot[nativeModuleNames[i]] = !!nativeModule;\n    }\n    var argToPrepend = [];\n    if (hasMultiAppSupport) {\n      argToPrepend.push(module.app.name);\n    }\n    if (hasCustomUrlOrRegionSupport && !disablePrependCustomUrlOrRegion) {\n      argToPrepend.push(module._customUrlOrRegion);\n    }\n    Object.assign(multiModuleRoot, nativeModuleWrapped(namespace, nativeModule, argToPrepend));\n  }\n  if (nativeEvents && nativeEvents.length) {\n    for (var _i = 0, len = nativeEvents.length; _i < len; _i++) {\n      subscribeToNativeModuleEvent(nativeEvents[_i]);\n    }\n  }\n  Object.freeze(multiModuleRoot);\n  NATIVE_MODULE_REGISTRY[key] = multiModuleRoot;\n  return NATIVE_MODULE_REGISTRY[key];\n}\nfunction subscribeToNativeModuleEvent(eventName) {\n  if (!NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName]) {\n    RNFBNativeEventEmitter.addListener(eventName, function (event) {\n      if (event.appName) {\n        SharedEventEmitter.emit(event.appName + \"-\" + eventName, event);\n      } else {\n        SharedEventEmitter.emit(eventName, event);\n      }\n    });\n    NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName] = true;\n  }\n}\nfunction getMissingModuleHelpText(namespace) {\n  var snippet = \"firebase.\" + namespace + \"()\";\n  var nativeModule = namespace.charAt(0).toUpperCase() + namespace.slice(1);\n  if (Platform.OS === 'ios') {\n    return \"You attempted to use a firebase module that's not installed natively on your iOS project by calling \" + snippet + \".\" + '\\r\\n\\r\\nEnsure you have either linked the module or added it to your projects Podfile.' + '\\r\\n\\r\\nSee http://invertase.link/ios for full setup instructions.';\n  }\n  var rnFirebasePackage = \"'io.invertase.firebase.\" + namespace + \".ReactNativeFirebase\" + nativeModule + \"Package'\";\n  var newInstance = \"'new ReactNativeFirebase\" + nativeModule + \"Package()'\";\n  return \"You attempted to use a firebase module that's not installed on your Android project by calling \" + snippet + \".\" + (\"\\r\\n\\r\\nEnsure you have:\\r\\n\\r\\n1) imported the \" + rnFirebasePackage + \" module in your 'MainApplication.java' file.\\r\\n\\r\\n2) Added the \") + (newInstance + \" line inside of the RN 'getPackages()' method list.\") + '\\r\\n\\r\\nSee http://invertase.link/android for full setup instructions.';\n}\nexport function getNativeModule(module) {\n  var key = nativeModuleKey(module);\n  if (NATIVE_MODULE_REGISTRY[key]) {\n    return NATIVE_MODULE_REGISTRY[key];\n  }\n  return initialiseNativeModule(module);\n}\nexport function getAppModule() {\n  if (NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE]) {\n    return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n  }\n  var namespace = 'app';\n  var nativeModule = NativeModules[APP_NATIVE_MODULE];\n  if (!nativeModule) {\n    throw new Error(getMissingModuleHelpText(namespace));\n  }\n  NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE] = nativeModuleWrapped(namespace, nativeModule, []);\n  return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n}","map":{"version":3,"names":["APP_NATIVE_MODULE","NativeFirebaseError","RNFBNativeEventEmitter","SharedEventEmitter","NATIVE_MODULE_REGISTRY","NATIVE_MODULE_EVENT_SUBSCRIPTIONS","nativeModuleKey","module","_customUrlOrRegion","app","name","_config","namespace","nativeModuleMethodWrapped","method","argToPrepend","args","possiblePromise","then","jsStack","Error","stack","catch","nativeError","Promise","reject","nativeModuleWrapped","NativeModule","native","properties","Object","keys","i","len","length","property","initialiseNativeModule","config","key","nativeEvents","nativeModuleName","hasMultiAppSupport","hasCustomUrlOrRegionSupport","disablePrependCustomUrlOrRegion","multiModuleRoot","multiModule","Array","isArray","nativeModuleNames","nativeModule","NativeModules","getMissingModuleHelpText","push","assign","subscribeToNativeModuleEvent","freeze","eventName","addListener","event","appName","emit","snippet","charAt","toUpperCase","slice","Platform","OS","rnFirebasePackage","newInstance","getNativeModule","getAppModule"],"sources":["C:/Users/dansf/Desktop/reactNative/PJ/node_modules/@react-native-firebase/app/lib/internal/registry/nativeModule.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { NativeModules, Platform } from 'react-native';\nimport { APP_NATIVE_MODULE } from '../constants';\nimport NativeFirebaseError from '../NativeFirebaseError';\nimport RNFBNativeEventEmitter from '../RNFBNativeEventEmitter';\nimport SharedEventEmitter from '../SharedEventEmitter';\n\nconst NATIVE_MODULE_REGISTRY = {};\nconst NATIVE_MODULE_EVENT_SUBSCRIPTIONS = {};\n\nfunction nativeModuleKey(module) {\n  return `${module._customUrlOrRegion || ''}:${module.app.name}:${module._config.namespace}`;\n}\n\n/**\n * Wraps a native module method to provide\n * auto prepended args and custom Error classes.\n *\n * @param namespace\n * @param method\n * @param argToPrepend\n * @returns {Function}\n */\nfunction nativeModuleMethodWrapped(namespace, method, argToPrepend) {\n  return (...args) => {\n    const possiblePromise = method(...[...argToPrepend, ...args]);\n\n    if (possiblePromise && possiblePromise.then) {\n      const jsStack = new Error().stack;\n      return possiblePromise.catch(nativeError =>\n        Promise.reject(new NativeFirebaseError(nativeError, jsStack, namespace)),\n      );\n    }\n\n    return possiblePromise;\n  };\n}\n\n/**\n * Prepends all arguments in prependArgs to all native method calls\n *\n * @param namespace\n * @param NativeModule\n * @param argToPrepend\n */\nfunction nativeModuleWrapped(namespace, NativeModule, argToPrepend) {\n  const native = {};\n  if (!NativeModule) {\n    return NativeModule;\n  }\n\n  const properties = Object.keys(NativeModule);\n\n  for (let i = 0, len = properties.length; i < len; i++) {\n    const property = properties[i];\n    if (typeof NativeModule[property] === 'function') {\n      native[property] = nativeModuleMethodWrapped(namespace, NativeModule[property], argToPrepend);\n    } else {\n      native[property] = NativeModule[property];\n    }\n  }\n\n  return native;\n}\n\n/**\n * Initialises and wraps all the native module methods.\n *\n * @param module\n * @returns {*}\n */\nfunction initialiseNativeModule(module) {\n  const config = module._config;\n  const key = nativeModuleKey(module);\n  const {\n    namespace,\n    nativeEvents,\n    nativeModuleName,\n    hasMultiAppSupport,\n    hasCustomUrlOrRegionSupport,\n    disablePrependCustomUrlOrRegion,\n  } = config;\n  const multiModuleRoot = {};\n  const multiModule = Array.isArray(nativeModuleName);\n  const nativeModuleNames = multiModule ? nativeModuleName : [nativeModuleName];\n\n  for (let i = 0; i < nativeModuleNames.length; i++) {\n    const nativeModule = NativeModules[nativeModuleNames[i]];\n\n    // only error if there's a single native module\n    // as multi modules can mean some are optional\n    if (!multiModule && !nativeModule) {\n      throw new Error(getMissingModuleHelpText(namespace));\n    }\n\n    if (multiModule) {\n      multiModuleRoot[nativeModuleNames[i]] = !!nativeModule;\n    }\n\n    const argToPrepend = [];\n\n    if (hasMultiAppSupport) {\n      argToPrepend.push(module.app.name);\n    }\n\n    if (hasCustomUrlOrRegionSupport && !disablePrependCustomUrlOrRegion) {\n      argToPrepend.push(module._customUrlOrRegion);\n    }\n\n    Object.assign(multiModuleRoot, nativeModuleWrapped(namespace, nativeModule, argToPrepend));\n  }\n\n  if (nativeEvents && nativeEvents.length) {\n    for (let i = 0, len = nativeEvents.length; i < len; i++) {\n      subscribeToNativeModuleEvent(nativeEvents[i]);\n    }\n  }\n\n  Object.freeze(multiModuleRoot);\n\n  NATIVE_MODULE_REGISTRY[key] = multiModuleRoot;\n\n  return NATIVE_MODULE_REGISTRY[key];\n}\n\n/**\n * Subscribe to a native event for js side distribution by appName\n *    React Native events are hard set at compile - cant do dynamic event names\n *    so we use a single event send it to js and js then internally can prefix it\n *    and distribute dynamically.\n *\n * @param eventName\n * @private\n */\nfunction subscribeToNativeModuleEvent(eventName) {\n  if (!NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName]) {\n    RNFBNativeEventEmitter.addListener(eventName, event => {\n      if (event.appName) {\n        // native event has an appName property - auto prefix and internally emit\n        SharedEventEmitter.emit(`${event.appName}-${eventName}`, event);\n      } else {\n        // standard event - no need to prefix\n        SharedEventEmitter.emit(eventName, event);\n      }\n    });\n\n    NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName] = true;\n  }\n}\n\n/**\n * Help text for integrating the native counter parts for each firebase module.\n *\n * @param namespace\n * @returns {string}\n */\nfunction getMissingModuleHelpText(namespace) {\n  const snippet = `firebase.${namespace}()`;\n  const nativeModule = namespace.charAt(0).toUpperCase() + namespace.slice(1);\n\n  if (Platform.OS === 'ios') {\n    return (\n      `You attempted to use a firebase module that's not installed natively on your iOS project by calling ${snippet}.` +\n      '\\r\\n\\r\\nEnsure you have either linked the module or added it to your projects Podfile.' +\n      '\\r\\n\\r\\nSee http://invertase.link/ios for full setup instructions.'\n    );\n  }\n\n  const rnFirebasePackage = `'io.invertase.firebase.${namespace}.ReactNativeFirebase${nativeModule}Package'`;\n  const newInstance = `'new ReactNativeFirebase${nativeModule}Package()'`;\n\n  return (\n    `You attempted to use a firebase module that's not installed on your Android project by calling ${snippet}.` +\n    `\\r\\n\\r\\nEnsure you have:\\r\\n\\r\\n1) imported the ${rnFirebasePackage} module in your 'MainApplication.java' file.\\r\\n\\r\\n2) Added the ` +\n    `${newInstance} line inside of the RN 'getPackages()' method list.` +\n    '\\r\\n\\r\\nSee http://invertase.link/android for full setup instructions.'\n  );\n}\n\n/**\n * Gets a wrapped native module instance for the provided firebase module.\n * Will attempt to create a new instance if non previously created.\n *\n * @param module\n * @returns {*}\n */\nexport function getNativeModule(module) {\n  const key = nativeModuleKey(module);\n\n  if (NATIVE_MODULE_REGISTRY[key]) {\n    return NATIVE_MODULE_REGISTRY[key];\n  }\n\n  return initialiseNativeModule(module);\n}\n\n/**\n * Custom wrapped app module as it does not have it's own FirebaseModule based class.\n *\n * @returns {*}\n */\nexport function getAppModule() {\n  if (NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE]) {\n    return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n  }\n\n  const namespace = 'app';\n  const nativeModule = NativeModules[APP_NATIVE_MODULE];\n\n  if (!nativeModule) {\n    throw new Error(getMissingModuleHelpText(namespace));\n  }\n\n  NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE] = nativeModuleWrapped(namespace, nativeModule, []);\n\n  return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}