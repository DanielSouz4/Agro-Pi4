{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { db, auth, storage } from \"../../components/config\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    picture = _useState4[0],\n    setPicture = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    image = _useState6[0],\n    setImage = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    link = _useState8[0],\n    setLink = _useState8[1];\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      console.log(result);\n      if (!result.canceled) {\n        setImage(result.uri);\n      }\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var uploadImage = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var blobImage = yield new Promise(function (resolve, reject) {\n          var xhr = new XMLHttpRequest();\n          xhr.onload = function () {\n            resolve(xhr.response);\n          };\n          xhr.onerror = function () {\n            reject(new TypeError(\"Network request failed\"));\n          };\n          xhr.responseType = 'blob';\n          xhr.open(\"GET\", image, true);\n          xhr.send(null);\n        });\n        var metadata = {\n          contentType: 'image/jpeg'\n        };\n        var storageRef = ref(storage, 'img/' + Date.now());\n        var uploadTask = uploadBytesResumable(storageRef, blobImage);\n        uploadTask.on('state_changed', function (snapshot) {\n          var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n          console.log('Upload is ' + progress + '% done');\n          switch (snapshot.state) {\n            case 'paused':\n              console.log('Upload is paused');\n              break;\n            case 'running':\n              console.log('Upload is running');\n              break;\n          }\n        }, function (error) {}, function () {\n          getDownloadURL(uploadTask.snapshot.ref).then(function (downloadURL) {\n            console.log('File available at', downloadURL);\n            setLink(downloadURL);\n          });\n        });\n      });\n      return function uploadImage() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    if (image != null) {\n      uploadImage();\n      setImage(null);\n    }\n  }, [image]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 22,\n        color: 'black'\n      },\n      children: \"Ol\\xE1, seja bem vindo!\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Titulo do arquivo selecionado\"\n    }), _jsx(TouchableOpacity, {\n      style: {\n        height: 50,\n        width: \"80%\",\n        margin: 20,\n        backgroundColor: \"green\",\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      onPress: pickImage,\n      children: _jsx(Text, {\n        children: \"Escolha uma foto \"\n      })\n    }), _jsx(Text, {\n      children: link\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  texto: {\n    color: \"black\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: 'black',\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","TouchableOpacity","Button","StyleSheet","Image","TextInput","db","auth","storage","ImagePicker","ref","uploadBytesResumable","getDownloadURL","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","picture","setPicture","_useState5","_useState6","image","setImage","_useState7","_useState8","link","setLink","pickImage","_ref","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","console","log","canceled","uri","apply","arguments","uploadImage","_ref2","blobImage","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","metadata","contentType","storageRef","Date","now","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","error","then","downloadURL","style","styles","container","children","fontSize","color","input","placeholder","height","width","margin","backgroundColor","justifyContent","alignItems","onPress","create","flex","texto","borderBottomWidth","borderBottomColor","padding"],"sources":["C:/Users/Positivo/OneDrive/Área de Trabalho/Projeto integrador 4/Agro-Pi4/src/screens/Imagens/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { View,Text,TouchableOpacity,Button,StyleSheet,Image, TextInput } from \"react-native\";\r\nimport{db,auth,storage} from '../../components/config';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\n\r\n\r\nexport default function App() {\r\n    const [title,setTitle] = useState(null);\r\n    const [picture,setPicture] = useState(null);\r\n    const [image,setImage] = useState(null);\r\n    const [link,setLink] = useState(null);\r\n\r\n    const pickImage = async () => {\r\n        // No permissions request is necessary for launching the image library\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n          allowsEditing: true,\r\n          aspect: [4, 3],\r\n          quality: 1,\r\n        });\r\n    \r\n        console.log(result);\r\n    \r\n        if (!result.canceled) {\r\n          setImage(result.uri);\r\n        }\r\n      };\r\n      useEffect(()=>{\r\n        const uploadImage = async()=>{\r\n            //trtanfroma o arquivo de imagem em blop image\r\n            const blobImage = await new Promise ((resolve,reject)=>{\r\n                const xhr = new XMLHttpRequest();\r\n                xhr.onload=function(){\r\n                    resolve(xhr.response);\r\n                }\r\n                xhr.onerror=function(){\r\n                    reject(new TypeError(\"Network request failed\"))\r\n                };\r\n                xhr.responseType = 'blob';\r\n                xhr.open(\"GET\",image,true);\r\n                xhr.send(null);\r\n            })\r\n            //configura a metadata do arquivo\r\n            /** @type {any} */\r\n            const metadata = {\r\n                contentType: 'image/jpeg',\r\n            };\r\n            //envia o arquivo pro storage\r\n            const storageRef = ref(storage, 'img/'+Date.now());\r\n\r\n            const uploadTask = uploadBytesResumable(storageRef, blobImage);\r\n\r\n            // Register three observers:\r\n            // 1. 'state_changed' observer, called any time the state changes\r\n            // 2. Error observer, called on failure\r\n            // 3. Completion observer, called on successful completion\r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n                    // Observe state change events such as progress, pause, and resume\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    switch (snapshot.state) {\r\n                        case 'paused':\r\n                            console.log('Upload is paused');\r\n                            break;\r\n                        case 'running':\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },\r\n                (error) => {\r\n                    // Handle unsuccessful uploads\r\n                },\r\n                () => {\r\n                    // Handle successful uploads on complete\r\n                    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n                    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                        console.log('File available at', downloadURL);\r\n                        setLink(downloadURL);\r\n                    });\r\n                }\r\n            );\r\n        }\r\n        if(image!=null){\r\n            uploadImage();\r\n            setImage(null);\r\n        }\r\n\r\n      },[image])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text  style={{fontSize:22,color:'black'}}>Olá, seja bem vindo!</Text>\r\n            <TextInput style={styles.input} placeholder=\"Titulo do arquivo selecionado\"/>\r\n            <TouchableOpacity style={{height:50,width:\"80%\",margin:20,backgroundColor:\"green\",justifyContent:'center',alignItems:'center'}}onPress={pickImage}><Text>Escolha uma foto </Text></TouchableOpacity>\r\n            <Text>{link}</Text>\r\n        </View>\r\n\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n\r\n    },\r\n    texto:{\r\n        color:\"black\",\r\n\r\n\r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderBottomWidth:1,\r\n        borderBottomColor:'black',\r\n        padding: 10,\r\n      },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}