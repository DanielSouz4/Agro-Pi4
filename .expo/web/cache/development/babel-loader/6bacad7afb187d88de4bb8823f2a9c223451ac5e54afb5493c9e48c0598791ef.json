{"ast":null,"code":"import { isIOS, isNull, isObject, isString, isUndefined } from '@react-native-firebase/app/lib/common';\nimport FirebaseApp from \"../../FirebaseApp\";\nimport { DEFAULT_APP_NAME } from \"../constants\";\nimport { getAppModule } from \"./nativeModule\";\nvar APP_REGISTRY = {};\nvar onAppCreateFn = null;\nvar onAppDestroyFn = null;\nvar initializedNativeApps = false;\nexport function setOnAppCreate(fn) {\n  onAppCreateFn = fn;\n}\nexport function setOnAppDestroy(fn) {\n  onAppDestroyFn = fn;\n}\nexport function initializeNativeApps() {\n  var nativeModule = getAppModule();\n  var NATIVE_FIREBASE_APPS = nativeModule.NATIVE_FIREBASE_APPS;\n  if (NATIVE_FIREBASE_APPS && NATIVE_FIREBASE_APPS.length) {\n    for (var i = 0; i < NATIVE_FIREBASE_APPS.length; i++) {\n      var _NATIVE_FIREBASE_APPS = NATIVE_FIREBASE_APPS[i],\n        appConfig = _NATIVE_FIREBASE_APPS.appConfig,\n        options = _NATIVE_FIREBASE_APPS.options;\n      var name = appConfig.name;\n      APP_REGISTRY[name] = new FirebaseApp(options, appConfig, true, deleteApp.bind(null, name, true));\n      onAppCreateFn(APP_REGISTRY[name]);\n    }\n  }\n  initializedNativeApps = true;\n}\nexport function getApp() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_APP_NAME;\n  if (!initializedNativeApps) {\n    initializeNativeApps();\n  }\n  var app = APP_REGISTRY[name];\n  if (!app) {\n    throw new Error(\"No Firebase App '\" + name + \"' has been created - call firebase.initializeApp()\");\n  }\n  return app;\n}\nexport function getApps() {\n  if (!initializedNativeApps) {\n    initializeNativeApps();\n  }\n  return Object.values(APP_REGISTRY);\n}\nexport function initializeApp() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var configOrName = arguments.length > 1 ? arguments[1] : undefined;\n  var appConfig = configOrName;\n  if (!isObject(configOrName) || isNull(configOrName)) {\n    appConfig = {\n      name: configOrName,\n      automaticResourceManagement: false,\n      automaticDataCollectionEnabled: true\n    };\n  }\n  if (isUndefined(appConfig.name)) {\n    appConfig.name = DEFAULT_APP_NAME;\n  }\n  var _appConfig = appConfig,\n    name = _appConfig.name;\n  if (!name || !isString(name)) {\n    return Promise.reject(new Error(\"Illegal App name: '\" + name + \"'\"));\n  }\n  if (APP_REGISTRY[name]) {\n    return Promise.reject(new Error(\"Firebase App named '\" + name + \"' already exists\"));\n  }\n  if (!isObject(options)) {\n    return Promise.reject(new Error(\"firebase.initializeApp(options, <- expects an Object but got '\" + typeof options + \"'\"));\n  }\n  if (!isString(options.apiKey)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'apiKey'.\"));\n  }\n  if (!isString(options.appId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'appId'.\"));\n  }\n  if (!isString(options.databaseURL)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'databaseURL'.\"));\n  }\n  if (!isString(options.messagingSenderId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'messagingSenderId'.\"));\n  }\n  if (!isString(options.projectId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'projectId'.\"));\n  }\n  if (!isString(options.storageBucket)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'storageBucket'.\"));\n  }\n  var app = new FirebaseApp(options, {\n    name: name\n  }, false, deleteApp.bind(null, name, true));\n  APP_REGISTRY[name] = app;\n  onAppCreateFn(APP_REGISTRY[name]);\n  return getAppModule().initializeApp(options, {\n    name: name\n  }).then(function () {\n    app._initialized = true;\n    return app;\n  }).catch(function (e) {\n    delete APP_REGISTRY[name];\n    throw e;\n  });\n}\nexport function setLogLevel(logLevel) {\n  if (!['error', 'warn', 'info', 'debug', 'verbose'].includes(logLevel)) {\n    throw new Error('LogLevel must be one of \"error\", \"warn\", \"info\", \"debug\", \"verbose\"');\n  }\n  if (isIOS) {\n    getAppModule().setLogLevel(logLevel);\n  }\n}\nexport function deleteApp(name, nativeInitialized) {\n  if (name === DEFAULT_APP_NAME && nativeInitialized) {\n    return Promise.reject(new Error('Unable to delete the default native firebase app instance.'));\n  }\n  var app = APP_REGISTRY[name];\n  if (app === undefined) {\n    throw new Error(\"Firebase App named '\" + name + \"' already deleted\");\n  }\n  var nativeModule = getAppModule();\n  return nativeModule.deleteApp(name).then(function () {\n    app._deleted = true;\n    onAppDestroyFn(app);\n    delete APP_REGISTRY[name];\n  });\n}","map":{"version":3,"names":["isIOS","isNull","isObject","isString","isUndefined","FirebaseApp","DEFAULT_APP_NAME","getAppModule","APP_REGISTRY","onAppCreateFn","onAppDestroyFn","initializedNativeApps","setOnAppCreate","fn","setOnAppDestroy","initializeNativeApps","nativeModule","NATIVE_FIREBASE_APPS","length","i","appConfig","options","name","deleteApp","bind","getApp","app","Error","getApps","Object","values","initializeApp","configOrName","automaticResourceManagement","automaticDataCollectionEnabled","Promise","reject","apiKey","appId","databaseURL","messagingSenderId","projectId","storageBucket","then","_initialized","catch","e","setLogLevel","logLevel","includes","nativeInitialized","undefined","_deleted"],"sources":["C:/Users/dansf/Desktop/reactNative/PJ/node_modules/@react-native-firebase/app/lib/internal/registry/app.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  isIOS,\n  isNull,\n  isObject,\n  isString,\n  isUndefined,\n} from '@react-native-firebase/app/lib/common';\nimport FirebaseApp from '../../FirebaseApp';\nimport { DEFAULT_APP_NAME } from '../constants';\nimport { getAppModule } from './nativeModule';\n\nconst APP_REGISTRY = {};\nlet onAppCreateFn = null;\nlet onAppDestroyFn = null;\nlet initializedNativeApps = false;\n\n/**\n * This was needed to avoid metro require cycles...\n * @param fn\n */\nexport function setOnAppCreate(fn) {\n  onAppCreateFn = fn;\n}\n\n/**\n * This was needed to avoid metro require cycles...\n * @param fn\n */\nexport function setOnAppDestroy(fn) {\n  onAppDestroyFn = fn;\n}\n\n/**\n * Initializes all apps that were created natively (android/ios),\n * e.g. the Default firebase app from plist/json google services file.\n */\nexport function initializeNativeApps() {\n  const nativeModule = getAppModule();\n  const { NATIVE_FIREBASE_APPS } = nativeModule;\n\n  if (NATIVE_FIREBASE_APPS && NATIVE_FIREBASE_APPS.length) {\n    for (let i = 0; i < NATIVE_FIREBASE_APPS.length; i++) {\n      const { appConfig, options } = NATIVE_FIREBASE_APPS[i];\n      const { name } = appConfig;\n      APP_REGISTRY[name] = new FirebaseApp(\n        options,\n        appConfig,\n        true,\n        deleteApp.bind(null, name, true),\n      );\n      onAppCreateFn(APP_REGISTRY[name]);\n    }\n  }\n\n  initializedNativeApps = true;\n}\n\n/**\n * Get an app by name; or the default app.\n *\n * On first call of this method it will initialize any\n * natively created apps in JS. This makes this 'lazy load'.\n *\n * @param name\n */\nexport function getApp(name = DEFAULT_APP_NAME) {\n  if (!initializedNativeApps) {\n    initializeNativeApps();\n  }\n  const app = APP_REGISTRY[name];\n\n  if (!app) {\n    throw new Error(`No Firebase App '${name}' has been created - call firebase.initializeApp()`);\n  }\n\n  return app;\n}\n\n/**\n * Gets all app instances, used for `firebase.apps`\n */\nexport function getApps() {\n  if (!initializedNativeApps) {\n    initializeNativeApps();\n  }\n  return Object.values(APP_REGISTRY);\n}\n\n/**\n *\n * @param options\n * @param configOrName\n */\nexport function initializeApp(options = {}, configOrName) {\n  let appConfig = configOrName;\n\n  if (!isObject(configOrName) || isNull(configOrName)) {\n    appConfig = {\n      name: configOrName,\n      automaticResourceManagement: false,\n      automaticDataCollectionEnabled: true,\n    };\n  }\n\n  if (isUndefined(appConfig.name)) {\n    appConfig.name = DEFAULT_APP_NAME;\n  }\n\n  const { name } = appConfig;\n\n  if (!name || !isString(name)) {\n    return Promise.reject(new Error(`Illegal App name: '${name}'`));\n  }\n\n  if (APP_REGISTRY[name]) {\n    return Promise.reject(new Error(`Firebase App named '${name}' already exists`));\n  }\n\n  // VALIDATE OPTIONS\n  if (!isObject(options)) {\n    return Promise.reject(\n      new Error(`firebase.initializeApp(options, <- expects an Object but got '${typeof options}'`),\n    );\n  }\n\n  if (!isString(options.apiKey)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'apiKey'.\"));\n  }\n\n  if (!isString(options.appId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'appId'.\"));\n  }\n\n  // TODO - make required only if database module exists - init app on native ios&android needs changing also\n  if (!isString(options.databaseURL)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'databaseURL'.\"));\n  }\n\n  // TODO - make required only if messaging/notifications module exists - init app on native ios&android needs changing also\n  if (!isString(options.messagingSenderId)) {\n    return Promise.reject(\n      new Error(\"Missing or invalid FirebaseOptions property 'messagingSenderId'.\"),\n    );\n  }\n\n  if (!isString(options.projectId)) {\n    return Promise.reject(new Error(\"Missing or invalid FirebaseOptions property 'projectId'.\"));\n  }\n\n  // TODO - make required only if database module exists - init app on native ios&android needs changing also\n  if (!isString(options.storageBucket)) {\n    return Promise.reject(\n      new Error(\"Missing or invalid FirebaseOptions property 'storageBucket'.\"),\n    );\n  }\n\n  const app = new FirebaseApp(options, { name }, false, deleteApp.bind(null, name, true));\n\n  // Note these initialization actions with side effects are performed prior to knowledge of\n  // successful initialization in the native code. Native code *may* throw an error.\n  APP_REGISTRY[name] = app;\n  onAppCreateFn(APP_REGISTRY[name]);\n\n  return getAppModule()\n    .initializeApp(options, { name })\n    .then(() => {\n      app._initialized = true;\n      return app;\n    })\n    .catch(e => {\n      // we need to clean the app entry from registry as the app does not actually exist\n      // There are still possible side effects from `onAppCreateFn` to consider but as existing\n      // code may rely on that function running prior to native create, re-ordering it is a semantic change\n      // and will be avoided\n      delete APP_REGISTRY[name];\n\n      // Now allow calling code to handle the initialization issue\n      throw e;\n    });\n}\n\nexport function setLogLevel(logLevel) {\n  if (!['error', 'warn', 'info', 'debug', 'verbose'].includes(logLevel)) {\n    throw new Error('LogLevel must be one of \"error\", \"warn\", \"info\", \"debug\", \"verbose\"');\n  }\n\n  if (isIOS) {\n    getAppModule().setLogLevel(logLevel);\n  }\n}\n\n/**\n *\n */\nexport function deleteApp(name, nativeInitialized) {\n  if (name === DEFAULT_APP_NAME && nativeInitialized) {\n    return Promise.reject(new Error('Unable to delete the default native firebase app instance.'));\n  }\n\n  const app = APP_REGISTRY[name];\n\n  if (app === undefined) {\n    throw new Error(`Firebase App named '${name}' already deleted`);\n  }\n\n  const nativeModule = getAppModule();\n\n  return nativeModule.deleteApp(name).then(() => {\n    app._deleted = true;\n    onAppDestroyFn(app);\n    delete APP_REGISTRY[name];\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}